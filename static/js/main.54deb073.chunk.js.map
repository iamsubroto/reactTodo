{"version":3,"sources":["Component/Greeting.js","context.js","Component/Todo.js","Component/Todos.js","Component/AddTodos.js","Component/EditTodos.js","Component/ActionTodos.js","App.js","serviceWorker.js","index.js"],"names":["Greeting","react_default","a","createElement","Fragment","className","AppContext","React","createContext","AppProvider","state","isAddTodos","editData","userId","id","title","completed","todos","onDelete","newTodos","_this","filter","item","setState","onAdd","e","newTodo","prevState","concat","onEdit","ItemId","result","_result$","console","log","onSave","itemId","myRef","savedTodos","map","current","value","contextValue","data","this","Provider","props","children","Component","AppConsumer","Consumer","Todo","context","key","style","cursor","onClick","bind","Todos","Component_Todo","AddTodos","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","target","handleSubmit","preventDefault","_this2","onSubmit","type","onChange","required","borderRadius","width","height","padding","uuidv1","fontSize","EditTodos","createRef","_context$data$editDat","defaultValue","ref","ActionTodos","Component_AddTodos","Component_EditTodos","App","src_context","Component_Greeting","Component_Todos","Component_ActionTodos","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54deb073.chunk.js","sourcesContent":["import React from 'react'\r\nfunction Greeting() {\r\n  return (\r\n    <>\r\n      <p className=\"text-white m-0\">What is your main focus for today?</p>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Greeting;","import React, { Component } from 'react';\r\n\r\n\r\nconst AppContext = React.createContext();\r\n\r\nclass AppProvider extends Component {\r\n        state = {\r\n        isAddTodos: true,\r\n        editData: {\r\n            userId: '',\r\n            id: '',\r\n            title: '',\r\n            completed: ''\r\n        },\r\n        todos: [\r\n            {\r\n                \"userId\": 1,\r\n                \"id\": 1,\r\n                \"title\": \"delectus aut autem\",\r\n                \"completed\": false\r\n            }, {\r\n                \"userId\": 1,\r\n                \"id\": 2,\r\n                \"title\": \"quis ut nam facilis et officia qui\",\r\n                \"completed\": false\r\n            }, {\r\n                \"userId\": 1,\r\n                \"id\": 3,\r\n                \"title\": \"fugiat veniam minus\",\r\n                \"completed\": false\r\n            }, {\r\n                \"userId\": 1,\r\n                \"id\": 4,\r\n                \"title\": \"et porro tempora\",\r\n                \"completed\": true\r\n            }\r\n        ]\r\n    }\r\n    onDelete = (id) => {\r\n        const newTodos = this.state.todos.filter((item) => {\r\n            return item.id != id;\r\n        });\r\n        this.setState({todos: newTodos});\r\n    }\r\n    onAdd = (title, id, e) => {\r\n        if(title === '') return;\r\n        const newTodo = {\r\n            title,\r\n            id,\r\n            completed: false\r\n        }\r\n        this.setState((prevState) => ({todos: prevState.todos.concat(newTodo)}));\r\n    }\r\n\r\n    onEdit = (ItemId) => {\r\n        this.setState({isAddTodos: false});\r\n        var result = this.state.todos.filter(item => {\r\n            if (item.id == ItemId) return item;\r\n        });\r\n        const { userId, id, title, completed } = result[0];\r\n        this.setState({\r\n            editData: {\r\n                userId,\r\n                id,\r\n                title,\r\n                completed\r\n            }\r\n        })\r\n        console.log(result);\r\n    }\r\n    onSave= (itemId, myRef) => {\r\n        const savedTodos = this.state.todos.map(item => {\r\n            const { userId, id, completed } = item;\r\n            if(item.id == itemId) {\r\n                return {\r\n                    userId,\r\n                    id,\r\n                    title: myRef.current.value,\r\n                    completed,\r\n                }\r\n            } \r\n           return item; \r\n        });\r\n        this.setState({todos: savedTodos});\r\n        this.setState({isAddTodos: true});\r\n    }\r\n    render() {\r\n        const contextValue = {\r\n            data: this.state,\r\n            onDelete: this.onDelete,\r\n            onAdd: this.onAdd,\r\n            onEdit: this.onEdit,\r\n            onSave: this.onSave\r\n        }\r\n        return (\r\n            <AppContext.Provider value={contextValue}>\r\n                {this.props.children}\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppProvider;\r\nexport const AppConsumer = AppContext.Consumer;","import React, { Component } from 'react'\r\nimport { AppConsumer } from '../context'\r\n\r\nclass Todo extends Component {\r\n  render(props) {\r\n\r\n    return (\r\n        <AppConsumer>\r\n            {\r\n                (context) => {\r\n                    const { todos } = context.data;  \r\n                    const { onDelete, onEdit } = context;\r\n                    return (\r\n                            todos.map((item) => {\r\n                                return (\r\n                                <>    \r\n                                <p className=\"d-flex\" key={item.id}>\r\n                                    <span className=\"mr-auto\">{item.title}</span>\r\n                                    <span className=\"fas fa-pencil-alt mr-2\" style={{cursor: \"pointer\"}} onClick={onEdit.bind(this, item.id)}></span>\r\n                                    <i className=\"fas fa-trash-alt ml-2\" style={{cursor: \"pointer\"}} onClick={onDelete.bind(this, item.id)}></i> \r\n                                </p>\r\n                                </>\r\n                                )\r\n                            })\r\n                    )\r\n                }\r\n            }\r\n        </AppConsumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react'\r\nimport Todo from './Todo'\r\n\r\nclass Todos extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <Todo />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Todos;","import React, { Component } from 'react'\r\nimport { AppConsumer } from '../context'\r\nimport uuidv1 from 'uuid/v1'\r\n\r\n class AddTodos extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          value: ''\r\n      }\r\n  }  \r\n  handleChange = (e) => {\r\n      this.setState({value: e.target.value});\r\n  }\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.setState({value: ''})\r\n      \r\n  }\r\n  render() {\r\n    return (\r\n        <AppConsumer>\r\n            {\r\n                (context) => {\r\n                    const { onAdd } = context;\r\n                    return (\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-md-9\">\r\n                                    <div className=\"form-group pt-3\">\r\n                                        <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        onChange={this.handleChange}\r\n                                        value={this.state.value}\r\n                                        required\r\n                                         />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                <button \r\n                                    className=\"btn btn-primary shadow\" \r\n                                    style={\r\n                                    {\r\n                                        borderRadius: \"50%\",\r\n                                        width: \"50px\", \r\n                                        height: \"50px\",\r\n                                        padding: \"0px !important\"\r\n                                        }\r\n                                    }\r\n                                    onClick= { onAdd.bind(this, this.state.value, uuidv1()) }\r\n                                    >\r\n                                    <i className=\"fas fa-plus\" style={{fontSize: \"20px\"}}></i>\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                         </form>\r\n                    )\r\n                }\r\n            }\r\n        </AppConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default AddTodos;","import React, { Component } from 'react'\r\nimport { AppConsumer } from '../context'\r\nimport uuidv1 from 'uuid/v1'\r\n\r\n class EditTodos extends Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.myRef = React.createRef();\r\n  }  \r\n\r\n  handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      this.setState({value: ''});\r\n      console.log(this.myRef.current.value);\r\n\r\n      \r\n  }\r\n  render() {\r\n    return (\r\n        <AppConsumer>\r\n            {\r\n                (context) => {\r\n                    const { id, title} = context.data.editData;\r\n                    return (\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"row align-items-center\">\r\n                                <div className=\"col-md-9\">\r\n                                    <div className=\"form-group pt-3\">\r\n                                        <input \r\n                                        type=\"text\" \r\n                                        className=\"form-control\" \r\n                                        defaultValue={title}\r\n                                        ref={this.myRef}\r\n                                        required\r\n                                         />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                <button \r\n                                type=\"submit\"\r\n                                    className=\"btn btn-success shadow\" \r\n                                    style={\r\n                                    {\r\n                                        borderRadius: \"50%\",\r\n                                        width: \"50px\", \r\n                                        height: \"50px\",\r\n                                        padding: \"0px !important\"\r\n                                        }\r\n                                    }\r\n                                    onClick= {context.onSave.bind(this, id, this.myRef) }\r\n                                    >\r\n                                    <i className=\"fas fa-check\" style={{fontSize: \"20px\"}}></i>\r\n                                </button>\r\n                                </div>\r\n                            </div>\r\n                         </form>\r\n                    )\r\n                }\r\n            }\r\n        </AppConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default EditTodos;","import React, { Component } from 'react'\r\nimport AddTodos from './AddTodos';\r\nimport EditTodos from './EditTodos'\r\nimport { AppConsumer } from '../context'\r\nclass ActionTodos extends Component {\r\n\r\n  render() {\r\n    return (\r\n        <AppConsumer>\r\n            {\r\n                (context) => {\r\n                    const { isAddTodos } = context.data;\r\n                    if(isAddTodos)\r\n                        return <AddTodos />\r\n                    else\r\n                        return <EditTodos />\r\n                }\r\n            }\r\n        </AppConsumer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default ActionTodos;","import React, { Component } from 'react';\nimport Greeting from './Component/Greeting'\nimport Todos from './Component/Todos'\nimport ActionTodos from './Component/ActionTodos'\nimport AppProvider from './context'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <AppProvider>\n        <div className=\"App d-flex justify-content-center pt-3\">\n          <div className=\"card shadow-lg\" style={{width: \"30%\"}}>\n          <div className=\"card-header bg-dark\">\n            <Greeting />\n          </div>\n          <div className=\"card-body\">\n              <Todos />\n              <ActionTodos />\n          </div>\n          </div>\n        </div>\n      </AppProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}